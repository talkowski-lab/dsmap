size.range <- seq(0, max(sizes), by=binsize)
df.by.size <- do.call("rbind", lapply(size.range, function(size){
c(length(which(sizes == size & !(has_sv))),
length(which(sizes == size & has_sv)))
}))
rownames(df.by.size) <- size.range / 1000
colnames(df.by.size) <- c("no_sv", "has_sv")
return(list("df.by.contig" = df.by.contig,
"df.by.size" = df.by.size))
}
# Summarize counts
pairs.dat <- summarize.pairs(pairs)
training.dat <- summarize.pairs(training)
# Summarize counts
pairs.dat <- summarize.pairs(pairs)
training.dat <- summarize.pairs(training)
out.prefix <- "~/scratch/test"
# Load pairs
pairs <- load_bins(pairs.in)
training <- load_bins(training.in)
# Summarize counts
pairs.dat <- summarize.pairs(pairs)
training.dat <- summarize.pairs(training)
# Merge counts per contig & write to output file
df.by.contig <- merge(pairs.dat$df.by.contig, training.dat$df.by.contig,
by=0, suffixes=c("_all", "_training"))
colnames(df.by.contig)[1] <- "contig"
write.table(df.by.contig, paste(out.prefix, "pair_counts_per_contig.tsv", sep="."),
row.names=F, col.names=T, sep="\t", quote=F)
# Merge counts by size & write to output file
df.by.size <- merge(pairs.dat$df.by.size, training.dat$df.by.size,
by=0, suffixes=c("_all", "_training"), sort=F)
colnames(df.by.size)[1] <- "pair_distance_kb"
df.by.size <- df.by.size[order(as.numeric(df.by.size$pair_distance_kb)), ]
write.table(df.by.size, paste(out.prefix, "pair_counts_vs_distance.tsv", sep="."),
row.names=F, col.names=T, sep="\t", quote=F)
# Plot all counts
plot.counts(pairs.dat$df.by.contig, title="All bin-pairs", cnv=cnv)
######################
# Plotting functions #
######################
# Barplots of bin-pair counts, optionally colored by CNV type
plot.counts <- function(df, title=NA, cnv=NA){
# Set plotting values
all.x.labels <- rownames(df)
n.bars <- nrow(df)
if(cnv %in% c("DEL", "DUP", "CNV")){
bar.colors <- c(colors[[cnv]]$light1, colors[[cnv]]$dark1)
legend.labs <- paste(c("No", "Has"), cnv)
}else{
bar.colors <- c(colors$brown$light1, colors$brown$dark1)
legend.labs <- c("No SV", "Has SV")
}
# Prep plotting area
prep_plot_area(xlims=c(0, n.bars), ylims=c(0, max(df)),
parmar=c(2.1, 2.8, 1.2, 0.3))
default.x.ticks <- axTicks(1)
x.ax.at <- default.x.ticks[-length(default.x.ticks)] + 0.5
x.ax.labels <- all.x.labels[x.ax.at + 0.5]
# Add bars
sapply(1:2, function(i){
rect(xleft=(1:n.bars)-1, xright=1:n.bars,
ybottom=0, ytop=df[, i], border=NA, col=bar.colors[i])
})
# Add axes
axis()
}
# Plot all counts
plot.counts(pairs.dat$df.by.contig, title="All bin-pairs", cnv=cnv)
######################
# Plotting functions #
######################
# Barplots of bin-pair counts, optionally colored by CNV type
plot.counts <- function(df, title=NA, x.axis.title=NA, cnv=NA){
# Set plotting values
all.x.labels <- rownames(df)
n.bars <- nrow(df)
if(cnv %in% c("DEL", "DUP", "CNV")){
bar.colors <- c(colors[[cnv]]$light1, colors[[cnv]]$dark1)
legend.labs <- paste(c("No", "Has"), cnv)
}else{
bar.colors <- c(colors$brown$light1, colors$brown$dark1)
legend.labs <- c("No SV", "Has SV")
}
# Prep plotting area
prep_plot_area(xlims=c(0, n.bars), ylims=c(0, max(df)),
parmar=c(2.1, 2.8, 1.2, 0.3))
# Add bars
sapply(1:2, function(i){
rect(xleft=(1:n.bars)-1, xright=1:n.bars,
ybottom=0, ytop=df[, i], border=NA, col=bar.colors[i])
})
# Add X axis
default.x.ticks <- axTicks(1)
x.ax.at <- default.x.ticks[-length(default.x.ticks)] + 0.5
x.ax.labels <- all.x.labels[x.ax.at + 0.5]
axis()
}
# Add X axis
default.x.ticks <- axTicks(1)
x.ax.at <- default.x.ticks[-length(default.x.ticks)] + 0.5
axis(1, at=c(-10e10, 10e10), col=colors$offblack)
axis(1, at=c(-10e10, 10e10), col=colors$offblack, tck=0)
axis(1, at=x.ax.at, tck=-0.025, col=colors$offblack, labels=NA)
axis(1, at=x.ax.at, tick=F, line=-0.65, labels=x.ax.labels)
# Add Y axis
y.ax.at <- axTicks(2)
y.ax.labels <- y.ax.at / 1000
axis(2, at=c(-10e10, 10e10), col=colors$offblack, tck=0)
axis(2, at=y.ax.at, tck=-0.025, col=colors$offblack, labels=NA)
y.ax.labels <- prettyNum(y.ax.at / 1000, big.mark=",")
y.ax.labels
axis(2, at=c(-10e10, 10e10), col=colors$offblack, tck=0)
axis(2, at=y.ax.at, tck=-0.025, col=colors$offblack, labels=NA)
axis(2, at=y.ax.at, tick=F, line=-0.65, labels=y.ax.labels)
axis(2, at=y.ax.at, tick=F, line=-0.65, labels=y.ax.labels, las=2)
mtext(1, line=1.25, text=x.axis.title)
x.axis.title="Chromosome"
mtext(1, line=1.25, text=x.axis.title)
mtext(2, line=1.75, text="Bin-pairs (x1,000)")
mtext(2, line=1.75, text="Bin pairs (x1,000)")
mtext(2, line=1.75, text="Bin pairs (thousands)")
######################
# Plotting functions #
######################
# Barplots of bin-pair counts, optionally colored by CNV type
plot.counts <- function(df, title=NA, x.axis.title=NA, cnv=NA){
# Set plotting values
all.x.labels <- rownames(df)
n.bars <- nrow(df)
if(cnv %in% c("DEL", "DUP", "CNV")){
bar.colors <- c(colors[[cnv]]$light1, colors[[cnv]]$dark1)
legend.labs <- paste(c("No", "Has"), cnv)
}else{
bar.colors <- c(colors$brown$light1, colors$brown$dark1)
legend.labs <- c("No SV", "Has SV")
}
# Prep plotting area
prep_plot_area(xlims=c(0, n.bars), ylims=c(0, max(df)),
parmar=c(2.1, 2.8, 1.2, 0.3))
# Add bars
sapply(1:2, function(i){
rect(xleft=(1:n.bars)-1, xright=1:n.bars,
ybottom=0, ytop=df[, i], border=NA, col=bar.colors[i])
})
# Add X axis
default.x.ticks <- axTicks(1)
x.ax.at <- default.x.ticks[-length(default.x.ticks)] + 0.5
x.ax.labels <- all.x.labels[x.ax.at + 0.5]
axis(1, at=c(-10e10, 10e10), col=colors$offblack, tck=0)
axis(1, at=x.ax.at, tck=-0.025, col=colors$offblack, labels=NA)
axis(1, at=x.ax.at, tick=F, line=-0.65, labels=x.ax.labels)
mtext(1, line=1.25, text=x.axis.title)
# Add Y axis
y.ax.at <- axTicks(2)
y.ax.labels <- prettyNum(y.ax.at / 1000, big.mark=",")
axis(2, at=c(-10e10, 10e10), col=colors$offblack, tck=0)
axis(2, at=y.ax.at, tck=-0.025, col=colors$offblack, labels=NA)
axis(2, at=y.ax.at, tick=F, line=-0.65, labels=y.ax.labels, las=2)
mtext(2, line=1.75, text="Bin pairs (thousands)")
}
# Add title
mtext(3, font=2, text=title)
# Add title
mtext(3, font=2, text=title)
# Add legend
legend("topright", legend=legend.labs, fill=bar.colors)
######################
# Plotting functions #
######################
# Barplots of bin-pair counts, optionally colored by CNV type
plot.counts <- function(df, title=NA, x.axis.title=NA, cnv=NA){
# Set plotting values
all.x.labels <- rownames(df)
n.bars <- nrow(df)
if(cnv %in% c("DEL", "DUP", "CNV")){
bar.colors <- c(colors[[cnv]]$light1, colors[[cnv]]$dark1)
legend.labs <- paste(c("No", "Has"), cnv)
}else{
bar.colors <- c(colors$brown$light1, colors$brown$dark1)
legend.labs <- c("No SV", "Has SV")
}
# Prep plotting area
prep_plot_area(xlims=c(0, n.bars), ylims=c(0, max(df)),
parmar=c(2.1, 2.8, 1.2, 0.3))
# Add bars
sapply(1:2, function(i){
rect(xleft=(1:n.bars)-1, xright=1:n.bars,
ybottom=0, ytop=df[, i], border=NA, col=bar.colors[i])
})
# Add X axis
default.x.ticks <- axTicks(1)
x.ax.at <- default.x.ticks[-length(default.x.ticks)] + 0.5
x.ax.labels <- all.x.labels[x.ax.at + 0.5]
axis(1, at=c(-10e10, 10e10), col=colors$offblack, tck=0)
axis(1, at=x.ax.at, tck=-0.025, col=colors$offblack, labels=NA)
axis(1, at=x.ax.at, tick=F, line=-0.65, labels=x.ax.labels)
mtext(1, line=1.25, text=x.axis.title)
# Add Y axis
y.ax.at <- axTicks(2)
y.ax.labels <- prettyNum(y.ax.at / 1000, big.mark=",")
axis(2, at=c(-10e10, 10e10), col=colors$offblack, tck=0)
axis(2, at=y.ax.at, tck=-0.025, col=colors$offblack, labels=NA)
axis(2, at=y.ax.at, tick=F, line=-0.65, labels=y.ax.labels, las=2)
mtext(2, line=1.75, text="Bin-pairs (thousands)")
# Add title
mtext(3, font=2, text=title)
# Add legend
legend("topright", legend=legend.labs, fill=bar.colors, cex=0.85)
}
# Plot all counts
plot.counts(pairs.dat$df.by.contig, title="All bin-pairs",
x.axis.title="Chromosome", cnv=cnv)
# Plot all counts
pdf(paste(out.prefix, "pair_counts_per_contig.all.pdf", sep="."), height=2.5, width=4)
plot.counts(pairs.dat$df.by.contig, title="All bin-pairs",
x.axis.title="Chromosome", cnv=cnv)
dev.off()
######################
# Plotting functions #
######################
# Barplots of bin-pair counts, optionally colored by CNV type
plot.counts <- function(df, title=NA, x.axis.title=NA, cnv=NA){
# Set plotting values
all.x.labels <- rownames(df)
n.bars <- nrow(df)
if(cnv %in% c("DEL", "DUP", "CNV")){
bar.colors <- c(colors[[cnv]]$light1, colors[[cnv]]$dark1)
legend.labs <- paste(c("No", "Has"), cnv)
}else{
bar.colors <- c(colors$brown$light1, colors$brown$dark1)
legend.labs <- c("No SV", "Has SV")
}
# Prep plotting area
prep_plot_area(xlims=c(0, n.bars), ylims=c(0, max(df)),
parmar=c(2.1, 2.8, 1.2, 0.3))
# Add bars
sapply(1:2, function(i){
rect(xleft=(1:n.bars)-1, xright=1:n.bars,
ybottom=0, ytop=df[, i], border=NA, col=bar.colors[i])
})
# Add X axis
default.x.ticks <- axTicks(1)
x.ax.at <- default.x.ticks[-length(default.x.ticks)] + 0.5
x.ax.labels <- all.x.labels[x.ax.at + 0.5]
axis(1, at=c(-10e10, 10e10), col=colors$offblack, tck=0)
axis(1, at=x.ax.at, tck=-0.025, col=colors$offblack, labels=NA)
axis(1, at=x.ax.at, tick=F, line=-0.65, labels=x.ax.labels)
mtext(1, line=1.25, text=x.axis.title)
# Add Y axis
y.ax.at <- axTicks(2)
y.ax.labels <- prettyNum(y.ax.at / 1000, big.mark=",")
axis(2, at=c(-10e10, 10e10), col=colors$offblack, tck=0)
axis(2, at=y.ax.at, tck=-0.025, col=colors$offblack, labels=NA)
axis(2, at=y.ax.at, tick=F, line=-0.65, labels=y.ax.labels, las=2)
mtext(2, line=1.75, text="Bin-pairs (thousands)")
# Add title
mtext(3, font=2, text=title, xpd=T)
# Add legend
legend("topright", legend=legend.labs, fill=bar.colors, cex=0.85)
}
plot.counts(pairs.dat$df.by.contig, title="All bin-pairs",
x.axis.title="Chromosome", cnv=cnv)
# Plot all counts
pdf(paste(out.prefix, "pair_counts_per_contig.all.pdf", sep="."), height=2.5, width=4)
plot.counts(pairs.dat$df.by.contig, title="All bin-pairs",
x.axis.title="Chromosome", cnv=cnv)
dev.off()
######################
# Plotting functions #
######################
# Barplots of bin-pair counts, optionally colored by CNV type
plot.counts <- function(df, title=NA, x.axis.title=NA, cnv=NA){
# Set plotting values
all.x.labels <- rownames(df)
n.bars <- nrow(df)
if(cnv %in% c("DEL", "DUP", "CNV")){
bar.colors <- c(colors[[cnv]]$light1, colors[[cnv]]$dark1)
legend.labs <- paste(c("No", "Has"), cnv)
}else{
bar.colors <- c(colors$brown$light1, colors$brown$dark1)
legend.labs <- c("No SV", "Has SV")
}
# Prep plotting area
prep_plot_area(xlims=c(0, n.bars), ylims=c(0, max(df)),
parmar=c(2.1, 2.8, 1.2, 0.3))
# Add bars
sapply(1:2, function(i){
rect(xleft=(1:n.bars)-1, xright=1:n.bars,
ybottom=0, ytop=df[, i], border="white", col=bar.colors[i])
})
# Add X axis
default.x.ticks <- axTicks(1)
x.ax.at <- default.x.ticks[-length(default.x.ticks)] + 0.5
x.ax.labels <- all.x.labels[x.ax.at + 0.5]
axis(1, at=c(-10e10, 10e10), col=colors$offblack, tck=0)
axis(1, at=x.ax.at, tck=-0.025, col=colors$offblack, labels=NA)
axis(1, at=x.ax.at, tick=F, line=-0.65, labels=x.ax.labels)
mtext(1, line=1.25, text=x.axis.title)
# Add Y axis
y.ax.at <- axTicks(2)
y.ax.labels <- prettyNum(y.ax.at / 1000, big.mark=",")
axis(2, at=c(-10e10, 10e10), col=colors$offblack, tck=0)
axis(2, at=y.ax.at, tck=-0.025, col=colors$offblack, labels=NA)
axis(2, at=y.ax.at, tick=F, line=-0.65, labels=y.ax.labels, las=2)
mtext(2, line=1.75, text="Bin-pairs (thousands)")
# Add title
mtext(3, font=2, text=title, xpd=T)
# Add legend
legend("topright", legend=legend.labs, fill=bar.colors, cex=0.85)
}
# Plot all counts
pdf(paste(out.prefix, "pair_counts_per_contig.all.pdf", sep="."), height=2.5, width=4)
plot.counts(pairs.dat$df.by.contig, title="All bin-pairs",
x.axis.title="Chromosome", cnv=cnv)
dev.off()
rect(xleft=(1:n.bars)-1, xright=1:n.bars,
ybottom=0, ytop=apply(df, 1, max), border="white", col=NA)
######################
# Plotting functions #
######################
# Barplots of bin-pair counts, optionally colored by CNV type
plot.counts <- function(df, title=NA, x.axis.title=NA, cnv=NA){
# Set plotting values
all.x.labels <- rownames(df)
n.bars <- nrow(df)
if(cnv %in% c("DEL", "DUP", "CNV")){
bar.colors <- c(colors[[cnv]]$light1, colors[[cnv]]$dark1)
legend.labs <- paste(c("No", "Has"), cnv)
}else{
bar.colors <- c(colors$brown$light1, colors$brown$dark1)
legend.labs <- c("No SV", "Has SV")
}
# Prep plotting area
prep_plot_area(xlims=c(0, n.bars), ylims=c(0, max(df)),
parmar=c(2.1, 2.8, 1.2, 0.3))
# Add bars
sapply(1:2, function(i){
rect(xleft=(1:n.bars)-1, xright=1:n.bars,
ybottom=0, ytop=df[, i], border=NA, col=bar.colors[i])
})
rect(xleft=(1:n.bars)-1, xright=1:n.bars,
ybottom=0, ytop=apply(df, 1, max), border="white", col=NA)
# Add X axis
default.x.ticks <- axTicks(1)
x.ax.at <- default.x.ticks[-length(default.x.ticks)] + 0.5
x.ax.labels <- all.x.labels[x.ax.at + 0.5]
axis(1, at=c(-10e10, 10e10), col=colors$offblack, tck=0)
axis(1, at=x.ax.at, tck=-0.025, col=colors$offblack, labels=NA)
axis(1, at=x.ax.at, tick=F, line=-0.65, labels=x.ax.labels)
mtext(1, line=1.25, text=x.axis.title)
# Add Y axis
y.ax.at <- axTicks(2)
y.ax.labels <- prettyNum(y.ax.at / 1000, big.mark=",")
axis(2, at=c(-10e10, 10e10), col=colors$offblack, tck=0)
axis(2, at=y.ax.at, tck=-0.025, col=colors$offblack, labels=NA)
axis(2, at=y.ax.at, tick=F, line=-0.65, labels=y.ax.labels, las=2)
mtext(2, line=1.75, text="Bin-pairs (thousands)")
# Add title
mtext(3, font=2, text=title, xpd=T)
# Add legend
legend("topright", legend=legend.labs, fill=bar.colors, cex=0.85)
}
# Plot all counts
pdf(paste(out.prefix, "pair_counts_per_contig.all.pdf", sep="."), height=2.5, width=4)
plot.counts(pairs.dat$df.by.contig, title="All bin-pairs",
x.axis.title="Chromosome", cnv=cnv)
dev.off()
plot.counts(training.dat$df.by.contig, title="Training bin-pairs",
x.axis.title="Chromosome", cnv=cnv)
pdf(paste(out.prefix, "pair_counts_per_contig.training.pdf", sep="."), height=2.5, width=4)
plot.counts(training.dat$df.by.contig, title="Training bin-pairs",
x.axis.title="Chromosome", cnv=cnv)
dev.off()
plot.counts(pairs.dat$df.by.size, title="All bin-pairs",
x.axis.title="Pair distance (kb)", cnv=cnv)
# Plot counts vs pair distance contig
pdf(paste(out.prefix, "pair_counts_vs.distance.all.pdf", sep="."), height=2.5, width=4)
plot.counts(pairs.dat$df.by.size, title="All bin-pairs",
x.axis.title="Pair distance (kb)", cnv=cnv)
dev.off()
?legend
######################
# Plotting functions #
######################
# Barplots of bin-pair counts, optionally colored by CNV type
plot.counts <- function(df, title=NA, x.axis.title=NA, cnv=NA){
# Set plotting values
all.x.labels <- rownames(df)
n.bars <- nrow(df)
if(cnv %in% c("DEL", "DUP", "CNV")){
bar.colors <- c(colors[[cnv]]$light1, colors[[cnv]]$dark1)
legend.labs <- paste(c("No", "Has"), cnv)
}else{
bar.colors <- c(colors$brown$light1, colors$brown$dark1)
legend.labs <- c("No SV", "Has SV")
}
# Prep plotting area
prep_plot_area(xlims=c(0, n.bars), ylims=c(0, max(df)),
parmar=c(2.1, 2.8, 1.2, 0.3))
# Add bars
sapply(1:2, function(i){
rect(xleft=(1:n.bars)-1, xright=1:n.bars,
ybottom=0, ytop=df[, i], border=NA, col=bar.colors[i])
})
rect(xleft=(1:n.bars)-1, xright=1:n.bars,
ybottom=0, ytop=apply(df, 1, max), border="white", col=NA)
# Add X axis
default.x.ticks <- axTicks(1)
x.ax.at <- default.x.ticks[-length(default.x.ticks)] + 0.5
x.ax.labels <- all.x.labels[x.ax.at + 0.5]
axis(1, at=c(-10e10, 10e10), col=colors$offblack, tck=0)
axis(1, at=x.ax.at, tck=-0.025, col=colors$offblack, labels=NA)
axis(1, at=x.ax.at, tick=F, line=-0.65, labels=x.ax.labels)
mtext(1, line=1.25, text=x.axis.title)
# Add Y axis
y.ax.at <- axTicks(2)
y.ax.labels <- prettyNum(y.ax.at / 1000, big.mark=",")
axis(2, at=c(-10e10, 10e10), col=colors$offblack, tck=0)
axis(2, at=y.ax.at, tck=-0.025, col=colors$offblack, labels=NA)
axis(2, at=y.ax.at, tick=F, line=-0.65, labels=y.ax.labels, las=2)
mtext(2, line=1.75, text="Bin-pairs (thousands)")
# Add title
mtext(3, font=2, text=title, xpd=T)
# Add legend
legend("topright", legend=legend.labs, fill=bar.colors, cex=0.85,
border=colors$offblack, bg=colors$offwhite)
}
# Plot counts vs pair distance contig
pdf(paste(out.prefix, "pair_counts_vs.distance.all.pdf", sep="."), height=2.5, width=4)
plot.counts(pairs.dat$df.by.size, title="All bin-pairs",
x.axis.title="Pair distance (kb)", cnv=cnv)
dev.off()
plot.counts(training.dat$df.by.size, title="Training bin-pairs",
x.axis.title="Pair distance (kb)", cnv=cnv)
pdf(paste(out.prefix, "pair_counts_vs.distance.training.pdf", sep="."), height=2.5, width=4)
plot.counts(training.dat$df.by.size, title="Training bin-pairs",
x.axis.title="Pair distance (kb)", cnv=cnv)
dev.off()
######################
# Plotting functions #
######################
# Barplots of bin-pair counts, optionally colored by CNV type
plot.counts <- function(df, title=NA, x.axis.title=NA, cnv=NA){
# Set plotting values
all.x.labels <- rownames(df)
n.bars <- nrow(df)
if(cnv %in% c("DEL", "DUP", "CNV")){
bar.colors <- c(colors[[cnv]]$light1, colors[[cnv]]$dark1)
legend.labs <- paste(c("No", "Has"), cnv)
}else{
bar.colors <- c(colors$brown$light1, colors$brown$dark1)
legend.labs <- c("No SV", "Has SV")
}
# Prep plotting area
prep_plot_area(xlims=c(0, n.bars), ylims=c(0, max(df)),
parmar=c(2.1, 2.8, 1.2, 0.3))
# Add bars
sapply(1:2, function(i){
rect(xleft=(1:n.bars)-1, xright=1:n.bars,
ybottom=0, ytop=df[, i], border=NA, col=bar.colors[i])
})
rect(xleft=(1:n.bars)-1, xright=1:n.bars,
ybottom=0, ytop=apply(df, 1, max), border="white", col=NA)
# Add X axis
default.x.ticks <- axTicks(1)
x.ax.at <- default.x.ticks[-length(default.x.ticks)] + 0.5
x.ax.labels <- all.x.labels[x.ax.at + 0.5]
axis(1, at=c(-10e10, 10e10), col=colors$offblack, tck=0)
axis(1, at=x.ax.at, tck=-0.025, col=colors$offblack, labels=NA)
axis(1, at=x.ax.at, tick=F, line=-0.65, labels=x.ax.labels)
mtext(1, line=1.25, text=x.axis.title)
# Add Y axis
y.ax.at <- axTicks(2)
y.ax.labels <- prettyNum(y.ax.at / 1000, big.mark=",")
axis(2, at=c(-10e10, 10e10), col=colors$offblack, tck=0)
axis(2, at=y.ax.at, tck=-0.025, col=colors$offblack, labels=NA)
axis(2, at=y.ax.at, tick=F, line=-0.65, labels=y.ax.labels, las=2)
mtext(2, line=1.9, text="Bin-pairs (thousands)")
# Add title
mtext(3, font=2, text=title, xpd=T)
# Add legend
legend("topright", legend=legend.labs, fill=bar.colors, cex=0.85,
border=colors$offblack, bg=colors$offwhite)
}
# Plot counts per contig
pdf(paste(out.prefix, "pair_counts_per_contig.all.pdf", sep="."), height=2.5, width=4)
plot.counts(pairs.dat$df.by.contig, title="All bin-pairs",
x.axis.title="Chromosome", cnv=cnv)
dev.off()
pdf(paste(out.prefix, "pair_counts_per_contig.training.pdf", sep="."), height=2.5, width=4)
plot.counts(training.dat$df.by.contig, title="Training bin-pairs",
x.axis.title="Chromosome", cnv=cnv)
dev.off()
# Plot counts vs pair distance contig
pdf(paste(out.prefix, "pair_counts_vs.distance.all.pdf", sep="."), height=2.5, width=4)
plot.counts(pairs.dat$df.by.size, title="All bin-pairs",
x.axis.title="Pair distance (kb)", cnv=cnv)
dev.off()
pdf(paste(out.prefix, "pair_counts_vs.distance.training.pdf", sep="."), height=2.5, width=4)
plot.counts(training.dat$df.by.size, title="Training bin-pairs",
x.axis.title="Pair distance (kb)", cnv=cnv)
dev.off()
roxygenize()
library(dsmapR)
?prep_plot_area
roxygenize()
library(dsmapR)
library(dsmapR)
?install.packages
install.packages("~/Desktop/Collins/Talkowski/NGS/SV_Projects/SV_constraint/dsmap/dsmapR_0.1.0.tar.gz")
install.packages("~/Desktop/Collins/Talkowski/NGS/SV_Projects/SV_constraint/dsmap/dsmapR_0.1.0.tar.gz", type="source", repos=NULL)
